<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>ZnHoCn&#39;s Blog</title>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://znhocn.github.io/"/>
  <updated>2017-05-22T14:23:39.108Z</updated>
  <id>https://znhocn.github.io/</id>
  
  <author>
    <name>ZnHoCn</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Diary 2017-05-21</title>
    <link href="https://znhocn.github.io/posts/2017/05/21/Diary-2017-05-21/"/>
    <id>https://znhocn.github.io/posts/2017/05/21/Diary-2017-05-21/</id>
    <published>2017-05-21T12:32:36.000Z</published>
    <updated>2017-05-22T14:23:39.108Z</updated>
    
    <content type="html"><![CDATA[<script src="/crypto-js.js"></script><script src="/mcommon.js"></script><h3 id="encrypt-message">Welcome to my blog, enter password to read.</h3><link rel="stylesheet" href="//cdn.bootcss.com/bootstrap/3.3.5/css/bootstrap.min.css"> <link rel="stylesheet" href="//cdn.bootcss.com/bootstrap/3.3.5/css/bootstrap-theme.min.css"> <script src="//cdn.bootcss.com/jquery/1.11.3/jquery.min.js"></script> <script src="//cdn.bootcss.com/bootstrap/3.3.5/js/bootstrap.min.js"></script> <div id="security"> <div> <div class="input-group"> <input type="text" class="form-control" aria-label="Enter the password." id="pass"/> <div class="input-group-btn"> <button type="button" class="btn btn-default" onclick="decryptAES()">Decrypt</button> </div> </div> </div> </div> <div id="encrypt-blog" style="display:none"> U2FsdGVkX185+fy5OfEi50b1+pyyJ4NX+EW8nuHdu465lEojZF1+CDlhSuQiiDxJE9kkUk854OF/z6Vf/WZbEg5urvO0I5TVqnS5Lku16pFyXqgSt8dYNuJ7vB+mAgjT10tJZZDP+bySQ7Kpeh0nPfCnGSJA/UUO4XZiBxNSlbQ4gRqU3MK2MUmCe4rcR6GoduFGCFtFljT0uH6dsET9bk9ffbtka/mzJ2uTbKypmaksKBrhZIXKkyKlw0UIS655DALRiVl2Vz3ozHKRqdrxfPEzJ7lneijZ4vY5txwA2EzcbcHEtl2oeTlOCsjKkC3nhrq0nC+nuWUl1anP3C6SOrGZlCKXmG6zREWtp6YdAkODjJn6PFffx5OYoh6chAg+AYVbZ4OVoZjHJvevGB8l/vuW9HpCxuubPK/z0TGlQJHGTNZ0Qrw4r1JTIkx+L2CnUEepoo7jJN4zfmbZRFEGXn/iBpI6mIhIFj6NZTTo3U4oGO+/PTqWerA1HXd3Q9Hb1gqae65VgH7OvsGANyltBzi2o1ti/SZJTpFSZq0kE6I1f7jvM9jwy4R13GbfrJKHcKBSp6jMWr9xzs8hxedJbQ== </div>]]></content>
    
    <summary type="html">
    
      The article has been encrypted, please enter your password to view.&lt;br&gt;
    
    </summary>
    
    
      <category term="Diary" scheme="https://znhocn.github.io/tags/Diary/"/>
    
  </entry>
  
  <entry>
    <title>YARD Stick One Tutorial</title>
    <link href="https://znhocn.github.io/posts/2017/05/17/YARD-Stick-One-Tutorial/"/>
    <id>https://znhocn.github.io/posts/2017/05/17/YARD-Stick-One-Tutorial/</id>
    <published>2017-05-17T15:27:28.000Z</published>
    <updated>2017-05-22T15:08:24.717Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://greatscottgadgets.com/yardstickone/" target="_blank" rel="external">YARD Stick One</a> 是一款 1 GHz 以下的 USB 无线收发器设备，基于 TI 的 <a href="http://www.ti.com/product/CC1110-CC1111" target="_blank" rel="external">CC1111</a> 芯片。你可以将 YARD Stick One 用于进行各种遥控信号的重放，汽车遥控锁的安全研究等。</p>
<a id="more"></a>
<ul>
<li>半双工发送和接收</li>
<li>工作频率-官方：300 - 348 MHz, 391 - 464 MHz 和 782 - 928 MHz</li>
<li>工作频率-非官方：281 - 361 MHz, 378 - 481 MHz 和 749 - 962 MHz</li>
<li>信号调制：ASK, OOK, GFSK, 2-FSK, 4-FSK, MSK</li>
<li>传输速率：500 kbps</li>
<li>全速 USB 2.0</li>
<li>SMA 母头天线连接器（50欧姆）</li>
<li>软件控制的天线端口功率（3.3 V 时最大为 50 mA）</li>
<li>低通滤波器，用于在 800 和 900 MHz 频带中工作时消除谐波</li>
<li>GoodFET 兼容的扩展和编程接口</li>
<li>GIMME 兼容编程测试点</li>
<li>开源硬件</li>
</ul>
<p>官方的工作频率是德州仪器 (TI) CC1111 芯片所支持的频率。但实际测试发现非官方的范围是可靠的，使用依旧正常。</p>
<ul>
<li>注：YARD Stick One 并不支持在 Windows 上使用，虽然有第三方尝试更改固件去支持 Windows 10 的 Linux 子系统，但目前官方并没宣布支持 Windows 系统。</li>
</ul>
<h2 id="1-使用"><a href="#1-使用" class="headerlink" title="1. 使用"></a>1. 使用</h2><h3 id="1-1-安装-RfCat"><a href="#1-1-安装-RfCat" class="headerlink" title="1.1 安装 RfCat"></a>1.1 安装 RfCat</h3><p>从源码安装</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">apt-get install python-usb</div><div class="line">wget https://bitbucket.org/atlas0fd00m/rfcat/downloads/rfcat_170508.tgz</div><div class="line">tar xvzf rfcat_170508.tgz</div><div class="line"><span class="built_in">cd</span> rfcat_170508/</div><div class="line">python setup.py install</div></pre></td></tr></table></figure>
<p>Kali Linux</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">apt-get install rfcat</div></pre></td></tr></table></figure>
<h3 id="1-2-RfCat-帮助"><a href="#1-2-RfCat-帮助" class="headerlink" title="1.2 RfCat 帮助"></a>1.2 RfCat 帮助</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">rfcat -h</div></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line">usage: rfcat [-h] [-r] [-i INDEX] [-s] [-f BASEFREQ] [-c INC] [-n SPECCHANS]</div><div class="line">             [--bootloader] [--force]</div><div class="line"></div><div class="line">optional arguments:</div><div class="line">  -h, --help            show this help message and exit</div><div class="line">  -r, --research        Interactive Python and the &quot;d&quot; instance to talk to</div><div class="line">                        your dongle. melikey longtime.</div><div class="line">  -i INDEX, --index INDEX</div><div class="line">  -s, --specan          start spectrum analyzer</div><div class="line">  -f BASEFREQ, --basefreq BASEFREQ</div><div class="line">  -c INC, --inc INC</div><div class="line">  -n SPECCHANS, --specchans SPECCHANS</div><div class="line">  --bootloader          trigger the bootloader (use in order to flash the</div><div class="line">                        dongle)</div><div class="line">  --force               use this to make sure you want to set bootloader mode</div><div class="line">                        (you *must* flash after setting --bootloader)</div></pre></td></tr></table></figure>
<h3 id="1-3-频谱分析"><a href="#1-3-频谱分析" class="headerlink" title="1.3 频谱分析"></a>1.3 频谱分析</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">rfcat <span class="_">-s</span> <span class="_">-f</span> 433e6</div></pre></td></tr></table></figure>
<p><img src="/files/images/2017-05-17_01-0002.png" alt=""></p>
<h3 id="1-4-RfCat-命令行"><a href="#1-4-RfCat-命令行" class="headerlink" title="1.4 RfCat 命令行"></a>1.4 RfCat 命令行</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">rfcat -r</div></pre></td></tr></table></figure>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div><div class="line">136</div><div class="line">137</div><div class="line">138</div><div class="line">139</div><div class="line">140</div><div class="line">141</div><div class="line">142</div><div class="line">143</div><div class="line">144</div><div class="line">145</div><div class="line">146</div><div class="line">147</div><div class="line">148</div><div class="line">149</div><div class="line">150</div><div class="line">151</div><div class="line">152</div></pre></td><td class="code"><pre><div class="line"><span class="string">'RfCat, the greatest thing since Frequency Hopping!'</span></div><div class="line"></div><div class="line">Research Mode: enjoy the raw power of rflib</div><div class="line"></div><div class="line">currently your environment has an object called <span class="string">"d"</span> <span class="keyword">for</span> dongle.  this is how</div><div class="line">you interact with the rfcat dongle:</div><div class="line">    &gt;&gt;&gt; d.ping()  // </div><div class="line">    &gt;&gt;&gt; d.setFreq(433000000)  // 设置信号频段</div><div class="line">    &gt;&gt;&gt; d.setMdmModulation(MOD_ASK_OOK)  // 设置信号调制模式</div><div class="line">    &gt;&gt;&gt; d.makePktFLEN(250)  // </div><div class="line">    &gt;&gt;&gt; d.RFxmit(<span class="string">"HALLO"</span>)  // 发送数据</div><div class="line">    &gt;&gt;&gt; d.RFrecv()  // 接收数据</div><div class="line">    &gt;&gt;&gt; <span class="built_in">print</span> d.reprRadioConfig() // 打印配置选项</div><div class="line"></div><div class="line"></div><div class="line">In [1]: <span class="built_in">print</span> d.reprRadioConfig()  // 打印配置选项</div><div class="line">== Hardware ==</div><div class="line">Dongle:              YARDSTICKONE</div><div class="line">Firmware rev:        0348</div><div class="line">Compiler:            Not found! Update needed!</div><div class="line">Bootloader:          CC-Bootloader</div><div class="line"></div><div class="line">== Software ==</div><div class="line">rflib rev:           450</div><div class="line"></div><div class="line">== Frequency Configuration ==</div><div class="line">Frequency:           901999877.929688 hz (0x259555L)</div><div class="line">Channel:             0</div><div class="line">Intermediate freq:   281250 hz</div><div class="line">Frequency Offset:    0 +/-</div><div class="line">Est. Freq Offset:    241</div><div class="line"></div><div class="line">== Modem Configuration ==</div><div class="line">Modulation:          2FSK</div><div class="line">DRate:               38360.595703 hz</div><div class="line">ChanBW:              93750.000000 hz</div><div class="line">DEVIATION:           20507.812500 hz</div><div class="line">Sync Mode:           15 of 16 bits must match</div><div class="line">M<span class="keyword">in</span> TX Preamble:     4 bytes</div><div class="line">Chan Spacing:        199951.171875 hz</div><div class="line">BSLimit:             No data rate offset compensation performed</div><div class="line">DC Filter:           enabled</div><div class="line">Manchester Encoding: disabled</div><div class="line">Fwd Err Correct:     disabled</div><div class="line"></div><div class="line">== Packet Configuration ==</div><div class="line">Sync Word:           0x0C4E</div><div class="line">Packet Length:       255</div><div class="line">Length Config:       Fixed Packet Mode</div><div class="line">Configured Address:  0x0</div><div class="line">Preamble Quality Threshold: 4 * 2</div><div class="line">Append Status:       No</div><div class="line">Rcvd Packet Check:   No address check</div><div class="line">Data Whitening:      off</div><div class="line">Packet Format:       Normal mode</div><div class="line">CRC:                 disabled</div><div class="line"></div><div class="line">== AES Crypto Configuration ==</div><div class="line">AES Mode:            CBC - Cipher Block Chaining</div><div class="line">Crypt RF Input:      off</div><div class="line">Crypt RF Output:     off</div><div class="line"></div><div class="line">== Radio Test Signal Configuration ==</div><div class="line">TEST2:               0x88</div><div class="line">TEST1:               0x31</div><div class="line">TEST0:               0x9</div><div class="line">VCO_SEL_CAL_EN:      0x0</div><div class="line"></div><div class="line">== Radio State ==</div><div class="line">     MARCSTATE:      MARC_STATE_RX (d)</div><div class="line">     DONGLE RESPONDING:  mode :c, last error<span class="comment"># 1</span></div><div class="line"></div><div class="line">== Client State ==</div><div class="line">========================================================================================================================</div><div class="line">     client thread cycles:      99/14</div><div class="line">     client errored cycles:     0</div><div class="line">     recv_queue:                (0 bytes) <span class="string">''</span></div><div class="line">     trash:                     (3 blobs) <span class="string">"[128, 142, (1495128220.831341, '')]"</span></div><div class="line">     recv_mbox                  (2 keys)  <span class="string">"['0x42', '0xff']"</span></div><div class="line">       app 0x42 (1 records)</div><div class="line">             [0x7]    (0 frames)  <span class="string">"[]"</span></div><div class="line"></div><div class="line">       app 0xff (4 records)</div><div class="line">             [0x88]    (0 frames)  <span class="string">"[]"</span></div><div class="line">             [0x80]    (0 frames)  <span class="string">"[]"</span></div><div class="line">             [0x82]    (0 frames)  <span class="string">"[]"</span></div><div class="line">             [0x86]    (0 frames)  <span class="string">"[]"</span></div><div class="line"></div><div class="line"></div><div class="line">In [2]: d.ping()</div><div class="line">PING: 26 bytes transmitted, received: <span class="string">'ABCDEFGHIJKLMNOPQRSTUVWXYZ'</span> (0.003433 seconds)</div><div class="line">PING: 26 bytes transmitted, received: <span class="string">'ABCDEFGHIJKLMNOPQRSTUVWXYZ'</span> (0.003278 seconds)</div><div class="line">PING: 26 bytes transmitted, received: <span class="string">'ABCDEFGHIJKLMNOPQRSTUVWXYZ'</span> (0.003287 seconds)</div><div class="line">PING: 26 bytes transmitted, received: <span class="string">'ABCDEFGHIJKLMNOPQRSTUVWXYZ'</span> (0.003417 seconds)</div><div class="line">PING: 26 bytes transmitted, received: <span class="string">'ABCDEFGHIJKLMNOPQRSTUVWXYZ'</span> (0.003243 seconds)</div><div class="line">PING: 26 bytes transmitted, received: <span class="string">'ABCDEFGHIJKLMNOPQRSTUVWXYZ'</span> (0.003240 seconds)</div><div class="line">PING: 26 bytes transmitted, received: <span class="string">'ABCDEFGHIJKLMNOPQRSTUVWXYZ'</span> (0.003528 seconds)</div><div class="line">PING: 26 bytes transmitted, received: <span class="string">'ABCDEFGHIJKLMNOPQRSTUVWXYZ'</span> (0.003263 seconds)</div><div class="line">PING: 26 bytes transmitted, received: <span class="string">'ABCDEFGHIJKLMNOPQRSTUVWXYZ'</span> (0.003441 seconds)</div><div class="line">PING: 26 bytes transmitted, received: <span class="string">'ABCDEFGHIJKLMNOPQRSTUVWXYZ'</span> (0.003416 seconds)</div><div class="line">Out[2]: (10, 0, 0.03384900093078613)</div><div class="line"></div><div class="line">In [3]: d.setFreq(433000000)  // 设置信号频段为 433 MHz</div><div class="line"></div><div class="line">In [4]: d.specan(433e6)  // 频谱分析界面，433e6 设置的是频段，这里使用的写法是科学计数法等同于 433000000</div><div class="line"></div><div class="line">In [5]: bin(0x1234f)  // 进制转换 十六进制转二进制</div><div class="line">Out[5]: <span class="string">'0b10010001101001111'</span></div><div class="line"></div><div class="line">In [6]: <span class="built_in">help</span>(d)  // 查看所有参数的帮助</div><div class="line"></div><div class="line">In [7]: d.  // 按 Tab 键，查看所有参数</div><div class="line">Display all 182 possibilities? (y or n)</div><div class="line">d.FHSSxmit                   d.getChannel                 d.mac_SyncCell               d.rf_redirection             d.setMdmNumPreamble</div><div class="line">d.RESET                      d.getChannels                d.makePktFLEN                d.rsema                      d.setMdmSyncMode</div><div class="line">d.RFcapture                  d.getCompilerInfo            d.makePktVLEN                d.runEP5_recv                d.setMdmSyncWord</div><div class="line">d.RFdump                     d.getDebugCodes              d.max_packet_size            d.runEP5_send                d.setModeIDLE</div><div class="line">d.RFlisten                   d.getEnableMdmDCFilter       d.mhz                        d.run_ctrl                   d.setModeRX</div><div class="line">d.RFrecv                     d.getEnableMdmFEC            d.nextChannel                d.scan                       d.setModeTX</div><div class="line">d.RF<span class="built_in">test</span>Long                 d.getEnableMdmManchester     d.peek                       d.send                       d.setPktAddr</div><div class="line">d.RFxmit                     d.getEnablePktAppendStatus   d.ping                       d.send_thread                d.setPktPQT</div><div class="line">d.RFxmitLong                 d.getEnablePktCRC            d.poke                       d.send_threadcounter         d.setPower</div><div class="line">d.adjustFreqOffset           d.getEnablePktDataWhitening  d.pokeReg                    d.setAESiv                   d.setRFRegister</div><div class="line">d.bootloader                 d.getFHSSstate               d.printClientState           d.setAESkey                  d.setRFbits</div><div class="line">d.calculateFsIF              d.getFreq                    d.printRadioConfig           d.setAESmode                 d.setRFparameters</div><div class="line">d.calculateFsOffset          d.getFreqEst                 d.printRadioState            d.setAmpMode                 d.setRadioConfig</div><div class="line">d.calculateMdmDeviatn        d.getFsIF                    d.radiocfg                   d.setBSLimit                 d.setRfMode</div><div class="line">d.calculatePktChanBW         d.getFsOffset                d.recv                       d.setChannel                 d.setup</div><div class="line">d.changeChannel              d.getInterruptRegisters      d.recvAll                    d.setChannels                d.setup24330MHz</div><div class="line">d.checkRepr                  d.getLQI                     d.recv_event                 d.setEnDeCoder               d.setup900MHz</div><div class="line">d.chipnum                    d.getMACdata                 d.recv_mbox                  d.setEnableCCA               d.setup900MHzContTrans</div><div class="line">d.chipstr                    d.getMACthreshold            d.recv_queue                 d.setEnableMdmDCFilter       d.setup900MHzHopTrans</div><div class="line">d.cleanup                    d.getMARCSTATE               d.recv_thread                d.setEnableMdmFEC            d.setup_rfstudio_902PktTx</div><div class="line">d.clearDebugCodes            d.getMdmChanBW               d.recv_threadcounter         d.setEnableMdmManchester     d.specan</div><div class="line">d.ctrl_thread                d.getMdmChanSpc              d.reprAESMode                d.setEnablePktAppendStatus   d.startHopping</div><div class="line">d.debug                      d.getMdmDRate                d.reprClientState            d.setEnablePktCRC            d.stopHopping</div><div class="line">d.devnum                     d.getMdmDeviatn              d.reprDebugCodes             d.setEnablePktDataWhitening  d.strobeModeCAL</div><div class="line">d.discover                   d.getMdmModulation           d.reprFreqConfig             d.setFHSSstate               d.strobeModeFSTXON</div><div class="line">d.endec                      d.getMdmNumPreamble          d.reprHardwareConfig         d.setFreq                    d.strobeModeIDLE</div><div class="line">d.ep0GetAddr                 d.getMdmSyncMode             d.reprMACdata                d.setFsIF                    d.strobeModeRX</div><div class="line">d.ep0Peek                    d.getMdmSyncWord             d.reprMdmModulation          d.setFsOffset                d.strobeModeReturn</div><div class="line">d.ep0Ping                    d.getPartNum                 d.reprModemConfig            d.setMACdata                 d.strobeModeTX</div><div class="line">d.ep0Poke                    d.getPktAddr                 d.reprPacketConfig           d.setMACperiod               d.testTX</div><div class="line">d.ep0Reset                   d.getPktLEN                  d.reprRadioConfig            d.setMACthreshold            d.trash</div><div class="line">d.ep5timeout                 d.getPktPQT                  d.reprRadioState             d.setMaxPower                d.xmit_event</div><div class="line">d.freq_offset_accumulator    d.getRSSI                    d.reprRadioTestSignalConfig  d.setMdmChanBW               d.xmit_queue</div><div class="line">d.getAESmode                 d.getRadioConfig             d.reprSoftwareConfig         d.setMdmChanSpc              d.xsema</div><div class="line">d.getAmpMode                 d.idx                        d.reset_event                d.setMdmDRate</div><div class="line">d.getBSLimit                 d.lowball                    d.resetup                    d.setMdmDeviatn</div><div class="line">d.getBuildInfo               d.lowballRestore             d.rf_configure               d.setMdmModulation</div><div class="line"></div><div class="line">In [10]: d.</div></pre></td></tr></table></figure>
<h3 id="1-5-接收信号"><a href="#1-5-接收信号" class="headerlink" title="1.5 接收信号"></a>1.5 接收信号</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div></pre></td><td class="code"><pre><div class="line"><span class="string">'RfCat, the greatest thing since Frequency Hopping!'</span></div><div class="line"></div><div class="line">Research Mode: enjoy the raw power of rflib</div><div class="line"></div><div class="line">currently your environment has an object called <span class="string">"d"</span> <span class="keyword">for</span> dongle.  this is how</div><div class="line">you interact with the rfcat dongle:</div><div class="line">    &gt;&gt;&gt; d.ping()</div><div class="line">    &gt;&gt;&gt; d.setFreq(433000000)</div><div class="line">    &gt;&gt;&gt; d.setMdmModulation(MOD_ASK_OOK)</div><div class="line">    &gt;&gt;&gt; d.makePktFLEN(250)</div><div class="line">    &gt;&gt;&gt; d.RFxmit(<span class="string">"HALLO"</span>)</div><div class="line">    &gt;&gt;&gt; d.RFrecv()</div><div class="line">    &gt;&gt;&gt; <span class="built_in">print</span> d.reprRadioConfig()</div><div class="line"></div><div class="line"></div><div class="line">In [1]: d.setFreq(433800000)  // 设置信号频段为 433.8 MHz</div><div class="line"></div><div class="line">In [2]: d.setMdmModulation(MOD_ASK_OOK)  // 设置信号调制模式为 ASK / OOK</div><div class="line"></div><div class="line">In [3]: d.setMdmDRate(4800)  // </div><div class="line"></div><div class="line">In [4]: d.setMaxPower()</div><div class="line"></div><div class="line">In [5]: d.lowball()</div><div class="line"></div><div class="line">In [6]: d.RFlisten()  // 开始监听数据</div><div class="line">Entering RFlisten mode...  packets arriving will be displayed on the screen</div><div class="line">(press Enter to stop)</div><div class="line">(1495207873.725) Received:  80004405072024210db80100080041004098760290020241482206c3b000014bc18c000000280360200b0f20281b0f60000000000088490f23d9f2004140969ea0900433f930088290b0118028e48430540183f04010843c800180008c82840004042021000000000004c640020a43c0120ec1c4010010200000606c7c012168295b50084318f00000040a028242c8e428126200481100000031c838004151a000c2080081012800081800001e40000006405c120a00928420c2c8681843040a180000000000000016c000020646c0080000084040400000000000063e0000020200909206ae1000103f68540220e5bd05a06cfa10023616b040  | ..D...$!......A.@.v....AH<span class="string">".....K.....(.`....(..`......I.#...A@.....3.0......(..0T...@..&lt;...........!.......@..C...........`l|.!h)[P.C........B..(.b.H....1.8.AQ.......(......@...@\........h.C...............F.....@@@......&gt;............?hT......l...6..@</span></div><div class="line">(1495207875.830) Received:  5322e404212004130000202300186020000000bc31842044218000120008410000100800400020000048681fb780010027008000002200002c3c9e0001008002c0c83a164240620ec5c0c61006000000000012044148740840025810c0000040039b043000000000043d8441484008488842000013e8180a6368e90b43000021200400000000000521ac50400140084200000000000014020500c87a04c01200b3c0060000040025150b2aa020000080c20a2212c00000000063e0310f7338290f63565e984840884b0f40d80a0040000002c200000008000202029252824000028604100000f750c200000000382d842003bf8400200056c0d0  | S"..!......<span class="comment">#..`.....1..D!.....A.....@....Hh.....'...."..,&lt;........:.B@b.............AHt.@.X....@...0.....=.AH@.H.B......ch..C..!........!.P@.@.B...........z...........%..*......."......c.1.s8).cV^.H@.K.@...@.............R.@........P.....8-........V..</span></div><div class="line">(1495207876.325) Received:  b1a435883185958430057439c60e10c00001000010f0000000420251400212400040ccc20050000000173d8ea1143983b0f43d8490840040a10c00020000010f20a02b17404c7b0f434801001a2c2100000000004020794f43d8da14c7d1046187258c0000008000041d8e21ec256200040402210c21eda18400400000000f23e83b0f43d87a3c218ba58422000000000c2d87a06c6d0820241d0b631821c7050800000000031763e85b0f73f0c150d610c21ee610c00783b1fcf63ec639be75c2b1<span class="built_in">fc</span>3c87b9ec2d87b0c01002063010800000000010d63e8790f43d829010118031839d843000000091<span class="built_in">fc</span>1d83b1f73d85a1ec7d0ce1ec63811f  | ..5.1...0.t9.............B.Q@..@.@...P....=...9...=....@..........+.@L&#123;.CH...,!.....@.yOC......a.%.........!.%b....!.!....@....<span class="comment">#.;.C.z&lt;!...".....-..lm..$..c.!.........c.[.s..P............&gt;.9.u...&lt;...-......0........&gt;...=.....1...0.........=...&#125;...c..</span></div><div class="line">(1495207877.241) Received:  e0240400212c0004010f3c042000000000187a0b43d8fb1fdfc8fa1ec23387688d60000000000808010004880020244c0120000029210800080000000321e86d17a1ec1d0f21e42000326520000002000020a005010020001020e40000200874802000008000080485e02011036120040021842112908400000000018fa1e43d8fa3f8e3e863087de4204000000000110000000000004f63ffe3ecf90f63a84100490882000000000043d80b998000281042985b08431e2808000000000018fe1ec3c08202c04006004280c0ee820000000000243e8790f6024550361e87b28610f790c20004000000c2d8fa1ec3b1b1fce61ec2100182063000  | .$..!,....&lt;.......z.C........3.h.`............<span class="variable">$L</span>....)!.......!.m.....!...2e....................t.............a...!.!...........=.....c.&#125;..@...........Oc.....c.A.I.......C.....(.B.[.C.(..............@..B.........$&gt;....EP6............................0.</div><div class="line">(1495207877.706) Received:  ff5f63840c81b09433801085b480000000010004048082a0048080f43fafb18c21ef829800000000060e87d0f63eced8fa1ed3c63ef63182b0b6220290863a8210101080008600a000000000000000acb0100284905000801083bfd6b0000000000650d61ec7c0f21245c01a04c0020020000000040010503c8798f43d87b1f420801007be8630000000013d0f6bf86c7d0fa1<span class="built_in">fc</span>733f4ba80282f65ac7d0f9100058b81042109614040002000010b2020480801241d082048210c3dec710000000029aed7bfb1fbe1ec2dc4218fbc841000400000047d8721e47f0f43c7b586309690000000000000001092002030120a8e10720040125a10c00  | ._c.....3...................?...!............&gt;......&gt;.1...<span class="string">"...:......................P............P......E.............P&lt;...=.........0....=.k.l&#125;...s?K....Z.....X..B...............A...............&#123;......B...A.....G.r.G..&lt;&#123;Xc.i....................%...</span></div></pre></td></tr></table></figure>
<h3 id="1-5-发送-OOK-信号"><a href="#1-5-发送-OOK-信号" class="headerlink" title="1.5 发送 OOK 信号"></a>1.5 发送 OOK 信号</h3><p>方法一</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line"><span class="string">'RfCat, the greatest thing since Frequency Hopping!'</span></div><div class="line"></div><div class="line">Research Mode: enjoy the raw power of rflib</div><div class="line"></div><div class="line">currently your environment has an object called <span class="string">"d"</span> <span class="keyword">for</span> dongle.  this is how</div><div class="line">you interact with the rfcat dongle:</div><div class="line">    &gt;&gt;&gt; d.ping()</div><div class="line">    &gt;&gt;&gt; d.setFreq(433000000)</div><div class="line">    &gt;&gt;&gt; d.setMdmModulation(MOD_ASK_OOK)</div><div class="line">    &gt;&gt;&gt; d.makePktFLEN(250)</div><div class="line">    &gt;&gt;&gt; d.RFxmit(<span class="string">"HALLO"</span>)</div><div class="line">    &gt;&gt;&gt; d.RFrecv()</div><div class="line">    &gt;&gt;&gt; <span class="built_in">print</span> d.reprRadioConfig()</div><div class="line"></div><div class="line"></div><div class="line">In [1]: d.setFreq(433e6)  // 设置信号频段为 433 MHz</div><div class="line"></div><div class="line">In [2]: d.setMdmModulation(MOD_ASK_OOK)  // 设置信号调制模式为 ASK / OOK</div><div class="line"></div><div class="line">In [3]: d.setMdmDRate(int(1.0/0.000550))  // </div><div class="line"></div><div class="line">In [4]: d.RFxmit(<span class="string">"\x8E\x8E\x88\x88\x8E\x88\x88\x00\x00\x00"</span> * 20)  // 发送十六进制编码的信号 <span class="string">"\x8E\x8E\x88\x88\x8E\x88\x88\x00\x00\x00"</span> 20次</div></pre></td></tr></table></figure>
<p>方法二</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div></pre></td><td class="code"><pre><div class="line"><span class="string">'RfCat, the greatest thing since Frequency Hopping!'</span></div><div class="line"></div><div class="line">Research Mode: enjoy the raw power of rflib</div><div class="line"></div><div class="line">currently your environment has an object called <span class="string">"d"</span> <span class="keyword">for</span> dongle.  this is how</div><div class="line">you interact with the rfcat dongle:</div><div class="line">    &gt;&gt;&gt; d.ping()</div><div class="line">    &gt;&gt;&gt; d.setFreq(433000000)</div><div class="line">    &gt;&gt;&gt; d.setMdmModulation(MOD_ASK_OOK)</div><div class="line">    &gt;&gt;&gt; d.makePktFLEN(250)</div><div class="line">    &gt;&gt;&gt; d.RFxmit(<span class="string">"HALLO"</span>)</div><div class="line">    &gt;&gt;&gt; d.RFrecv()</div><div class="line">    &gt;&gt;&gt; <span class="built_in">print</span> d.reprRadioConfig()</div><div class="line"></div><div class="line"></div><div class="line">In [1]: d.setFreq(433800000)  // 设置信号频段为 433.8 MHz</div><div class="line"></div><div class="line">In [2]: d.setMdmModulation(MOD_ASK_OOK)  // 设置信号调制模式为 ASK / OOK</div><div class="line"></div><div class="line">In [3]: d.makePktFLEN(4)  // 设置包长度为 4 以为我们这里只发送 4 bytes</div><div class="line"></div><div class="line">In [4]: d.setMdmDRate(4800)  // 设置波特率</div><div class="line"></div><div class="line">In [5]: d.setMaxPower()</div><div class="line"></div><div class="line">In [6]: <span class="keyword">for</span> i <span class="keyword">in</span> range(0,15):d.RFxmit(<span class="string">'\xDE\xAD\xBE\xEF'</span>)  // 重复发送 15 次数据</div></pre></td></tr></table></figure>
<h3 id="1-6-使用-Python-脚本"><a href="#1-6-使用-Python-脚本" class="headerlink" title="1.6 使用 Python 脚本"></a>1.6 使用 Python 脚本</h3><p>Python 脚本</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#!/usr/bin/python</span></div><div class="line"><span class="comment">#</span></div><div class="line"><span class="comment"># Ths is a rudimentary implementation of packet reception using YARD Stick One</span></div><div class="line"><span class="comment"># with RfCat demonstrated in Rapid Radio Reversing presented at ToorCon 17</span></div><div class="line"><span class="comment"># (2015).</span></div><div class="line"><span class="comment">#</span></div><div class="line"><span class="comment"># File Name: sl.py</span></div><div class="line"><span class="comment"># usage from rfcat interactive shell:</span></div><div class="line"><span class="comment">#   %run sl.py</span></div><div class="line"><span class="comment">#   rxsl(d)</span></div><div class="line"></div><div class="line"><span class="keyword">from</span> rflib <span class="keyword">import</span> *</div><div class="line"><span class="keyword">import</span> sys</div><div class="line"></div><div class="line"><span class="comment"># This validity check is only verifying certain bytes that are present in all</span></div><div class="line"><span class="comment"># packets.  It really should be followed up (or replaced) by a checksum</span></div><div class="line"><span class="comment"># verification.</span></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">packet_valid</span><span class="params">(p)</span>:</span></div><div class="line">	<span class="keyword">if</span> ord(p[<span class="number">0</span>]) != <span class="number">0x6d</span>:</div><div class="line">		<span class="keyword">return</span> <span class="keyword">False</span></div><div class="line">	<span class="keyword">if</span> ord(p[<span class="number">1</span>]) != <span class="number">0xb6</span>:</div><div class="line">		<span class="keyword">return</span> <span class="keyword">False</span></div><div class="line">	<span class="keyword">if</span> ord(p[<span class="number">6</span>]) != <span class="number">0x6d</span>:</div><div class="line">		<span class="keyword">return</span> <span class="keyword">False</span></div><div class="line">	<span class="keyword">if</span> ord(p[<span class="number">7</span>]) != <span class="number">0xb6</span>:</div><div class="line">		<span class="keyword">return</span> <span class="keyword">False</span></div><div class="line">	<span class="keyword">if</span> (ord(p[<span class="number">29</span>]) &amp; <span class="number">0xfc</span>) != <span class="number">0</span>:</div><div class="line">		<span class="keyword">return</span> <span class="keyword">False</span></div><div class="line">	<span class="keyword">return</span> <span class="keyword">True</span></div><div class="line"></div><div class="line"><span class="comment"># This could probably be simpler and/or easier to read.  It extracts every</span></div><div class="line"><span class="comment"># third bit in order to decode the pulse width modulation (PWM).  The PWM</span></div><div class="line"><span class="comment"># implemented by StealthLock is well behaved in that the pulse durations and</span></div><div class="line"><span class="comment"># interval durations are all one or two times the length of a time unit and</span></div><div class="line"><span class="comment"># data bits are represented by a consistent number (3) of time units.  This is</span></div><div class="line"><span class="comment"># the time unit I have used in the RfCat symbol rate configuration, so a long</span></div><div class="line"><span class="comment"># pulse appears as symbols (1, 1, 0) and a short pulse appears as (1, 0, 0).</span></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">pwm_decode</span><span class="params">(p)</span>:</span></div><div class="line">	biginteger = <span class="number">0</span></div><div class="line">	<span class="keyword">for</span> byte <span class="keyword">in</span> p:</div><div class="line">		biginteger &lt;&lt;= <span class="number">8</span></div><div class="line">		biginteger |= ord(byte)</div><div class="line">	biginteger &gt;&gt;= <span class="number">12</span></div><div class="line">	out = <span class="number">0</span></div><div class="line">	<span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">28</span>, (len(p)*<span class="number">8</span><span class="number">-12</span>)/<span class="number">3</span>, <span class="number">1</span>):</div><div class="line">		out &lt;&lt;= <span class="number">1</span></div><div class="line">		out |= ((biginteger &amp; <span class="number">1</span>) ^ <span class="number">1</span>)</div><div class="line">		biginteger &gt;&gt;=<span class="number">3</span></div><div class="line">	<span class="keyword">return</span> out</div><div class="line"></div><div class="line"><span class="comment"># checksum byte is 0xff minus 8-bit addition of previous bytes, like so:</span></div><div class="line"><span class="comment"># hex(0xff-(0x02+0x98+0x76+0xff+0xff)&amp;0xff)</span></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">rxsl</span><span class="params">(device)</span>:</span>  <span class="comment"># 函数方法</span></div><div class="line">	device.setFreq(<span class="number">314980000</span>)</div><div class="line">	device.setMdmModulation(MOD_ASK_OOK)</div><div class="line">	device.setMdmDRate(<span class="number">2450</span>)</div><div class="line">	device.setPktPQT(<span class="number">0</span>)</div><div class="line">	device.setMdmSyncMode(<span class="number">2</span>)</div><div class="line">	device.setMdmSyncWord(<span class="number">0x06db</span>)</div><div class="line">	device.setMdmNumPreamble(<span class="number">0</span>)</div><div class="line">	device.setMaxPower()</div><div class="line">	device.lowball()</div><div class="line">	device.makePktFLEN(<span class="number">30</span>)</div><div class="line"></div><div class="line">	<span class="keyword">while</span> <span class="keyword">not</span> keystop():</div><div class="line">		<span class="keyword">try</span>:</div><div class="line">			pkt, ts = device.RFrecv()</div><div class="line">			<span class="keyword">if</span> packet_valid(pkt):</div><div class="line">				<span class="comment">#print "Received:  %s" % pkt.encode('hex')</span></div><div class="line">				<span class="keyword">print</span> <span class="string">"0x%012x"</span> % pwm_decode(pkt)</div><div class="line">		<span class="keyword">except</span> ChipconUsbTimeoutException:</div><div class="line">			<span class="keyword">pass</span></div><div class="line">	sys.stdin.read(<span class="number">1</span>)</div></pre></td></tr></table></figure>
<p>在 RfCat 命令行内调用</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># rfcat -r</span></div><div class="line"><span class="string">'RfCat, the greatest thing since Frequency Hopping!'</span></div><div class="line"></div><div class="line">Research Mode: enjoy the raw power of rflib</div><div class="line"></div><div class="line">currently your environment has an object called <span class="string">"d"</span> <span class="keyword">for</span> dongle.  this is how</div><div class="line">you interact with the rfcat dongle:</div><div class="line">    &gt;&gt;&gt; d.ping()</div><div class="line">    &gt;&gt;&gt; d.setFreq(433000000)</div><div class="line">    &gt;&gt;&gt; d.setMdmModulation(MOD_ASK_OOK)</div><div class="line">    &gt;&gt;&gt; d.makePktFLEN(250)</div><div class="line">    &gt;&gt;&gt; d.RFxmit(<span class="string">"HALLO"</span>)</div><div class="line">    &gt;&gt;&gt; d.RFrecv()</div><div class="line">    &gt;&gt;&gt; <span class="built_in">print</span> d.reprRadioConfig()</div><div class="line"></div><div class="line"></div><div class="line">In [1]: %run sl.py  // 运行 sl.py 脚本</div><div class="line"></div><div class="line">In [2]: rxsl(d)  // 使用脚本内的方法</div></pre></td></tr></table></figure>
<h2 id="2-rfpwnon-信号暴力穷举"><a href="#2-rfpwnon-信号暴力穷举" class="headerlink" title="2. rfpwnon 信号暴力穷举"></a>2. rfpwnon 信号暴力穷举</h2><p><a href="https://github.com/exploitagency/github-rfpwnon" target="_blank" rel="external">rfpwnon</a> 是一款基于 rfcat 实现的的无线电信号暴力穷举攻击的 Python 脚本</p>
<h3 id="2-1-安装"><a href="#2-1-安装" class="headerlink" title="2.1 安装"></a>2.1 安装</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">apt-get install python python-pip rfcat</div><div class="line">pip install bitstring</div><div class="line">wget https://raw.githubusercontent.com/exploitagency/github-rfpwnon/master/rfpwnon.py</div><div class="line">./rfpwnon.py --help</div></pre></td></tr></table></figure>
<h3 id="2-2-帮助信息"><a href="#2-2-帮助信息" class="headerlink" title="2.2 帮助信息"></a>2.2 帮助信息</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># ./rfpwnon.py -h</span></div><div class="line">usage: rfpwnon.py [-h] [-v] [<span class="_">-f</span> BASEFREQ] [-b BAUDRATE] [<span class="_">-l</span> BINLENGTH]</div><div class="line">                  [-r REPEATTIMES] [--keys] [-p PPAD] [-t TPAD] [--raw]</div><div class="line">                  [--tri] [--show]</div><div class="line"></div><div class="line">Application to use a rfcat compatible device to brute force a particular AM</div><div class="line">OOK or raw binary signal.</div><div class="line"></div><div class="line">optional arguments:</div><div class="line">  -h, --help      show this <span class="built_in">help</span> message and <span class="built_in">exit</span>  // 显示帮助信息</div><div class="line">  -v, --version   show program<span class="string">'s version number and exit  // 显示软件版本</span></div><div class="line">  -f BASEFREQ     Specify the target frequency to transmit on, default is  // 指定信号频段，默认为 915000000 Hz</div><div class="line">                  915000000.</div><div class="line">  -b BAUDRATE     Specify the baudrate of the signal, default is 2000.  // 指定波特率，默认为 2000</div><div class="line">  -l BINLENGTH    Specify the binary length of the signal to brute force. By  // 指定要生成的二进制长度</div><div class="line">                  default this is the binary length before pwm encoding. When</div><div class="line">                  the flag --raw is set this is the binary length of the pwm</div><div class="line">                  encoded signal.</div><div class="line">  -r REPEATTIMES  Specify the number of times to repeat the signal. By default  // 指定一个信号重复的次数</div><div class="line">                  this is set to 1 and uses the de bruijn sequence for speed.   // 当设为 1 时使用 de bruijn 序列的速度</div><div class="line">                  When set greater than one the script sends each possible      // 当设置大于 1 时脚本会花费更多的时间去执行</div><div class="line">                  permutation of the signal individually and takes much longer</div><div class="line">                  to complete. For some applications the signal is required to</div><div class="line">                  be sent multiple times.</div><div class="line">  --keys          Displays the values being transmitted in binary, hex, and  // 显示正在传输的二进制，十六进制和十进制值</div><div class="line">                  decimal both before and after pwm encoding.</div><div class="line">  -p PPAD         Specify your own binary padding to be attached before the  // 指定要附加在所生成二进制之前的固定二进制值</div><div class="line">                  brute forced binary.</div><div class="line">  -t TPAD         Specify your own binary padding to be attached after the  // 指定要附加在所生成二进制之后的固定二进制值</div><div class="line">                  brute forced binary.</div><div class="line">  --raw           This flag disables the script from performing the pwm</div><div class="line">                  encoding of the binary signal. When set you must specify the</div><div class="line">                  full pwm encoded binary length using -l.</div><div class="line">  --tri           This flag sets up the script to brute force a trinary</div><div class="line">                  signal.</div><div class="line">  --show          Prints de Bruijn sequence before transmitting.  // 显示 de Bruijn 序列</div></pre></td></tr></table></figure>
<h3 id="2-3-使用实例"><a href="#2-3-使用实例" class="headerlink" title="2.3 使用实例"></a>2.3 使用实例</h3><p>指定波特率为 <code>2000</code> 生成 <code>4</code> 位长的所有二进制信号，每个信号重复发送 <code>5</code> 次</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">./rfpwnon.py <span class="_">-f</span> 315000000 -b 2000 <span class="_">-l</span> 4 -r 5</div></pre></td></tr></table></figure>
<p>指定波特率为 <code>1818</code> 每个信号的开头的二进制编码为 <code>100101</code> 在其之后生成 <code>10</code> 为长的所有二进制信号，每个信号重复发送 <code>2</code> 次</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">./rfpwnon.py <span class="_">-f</span> 315060000 -b 1818 -p 100101 <span class="_">-l</span> 10 -r 2</div></pre></td></tr></table></figure>
<p>指定波特率为 <code>1818</code> 生成 <code>16</code> 为长的所有二进制信号，每个信号重复发送 <code>2</code> 次。这会花费很多时间来发送完所有的信号。</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">./rfpwnon.py <span class="_">-f</span> 315060000 -b 1818 <span class="_">-l</span> 16 -r 2</div></pre></td></tr></table></figure>
<h2 id="3-ToorChat"><a href="#3-ToorChat" class="headerlink" title="3. ToorChat"></a>3. ToorChat</h2><p><a href="https://github.com/hathcox/ToorChat" target="_blank" rel="external">ToorChat</a> 是一款使用 <a href="https://greatscottgadgets.com/tc13badge/" target="_blank" rel="external">ToorCon 2013 徽章</a>的聊天应用程序。<br>YARD State One 的硬件设计上与 ToorCon 2013 badge 使用的芯片与固件是一样的，所以这程序也是可以通用的。<br>ToorChat 聊天工具使用时需要至少两个 RfCat 支持的硬件才能通过无线电正常通信。</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">git <span class="built_in">clone</span> https://github.com/hak5/ToorChat.git</div><div class="line"><span class="built_in">cd</span> ToorChat</div><div class="line">./toorchat.py</div></pre></td></tr></table></figure>
<p><img src="/files/images/2017-05-17_01-0003.png" alt=""></p>
<h2 id="4-固件"><a href="#4-固件" class="headerlink" title="4. 固件"></a>4. 固件</h2><p>YARD Stick One 的固件就是 <a href="https://bitbucket.org/atlas0fd00m/rfcat" target="_blank" rel="external">rfcat</a> 提供的，Bootloader 使用的是 <a href="https://github.com/AdamLaurie/CC-Bootloader" target="_blank" rel="external">CC-Bootloader</a>。固件和硬件是开源的，你可以自己编写固件实现你需要的功能。</p>
<hr>
<h2 id="链接"><a href="#链接" class="headerlink" title="链接"></a>链接</h2><ul>
<li><a href="http://greatscottgadgets.com/yardstickone/" target="_blank" rel="external">Great Scott Gadgets - YARD Stick One</a></li>
<li><a href="https://github.com/greatscottgadgets/yardstick" target="_blank" rel="external">GitHub: YARD Stick One</a></li>
<li><a href="https://bitbucket.org/atlas0fd00m/rfcat" target="_blank" rel="external">rfcat project</a></li>
<li><a href="https://andrewmohawk.com/2012/09/06/hacking-fixed-key-remotes/" target="_blank" rel="external">Hacking fixed key remotes</a></li>
<li><a href="http://andrewmohawk.com/2015/08/31/hacking-fixed-key-remotes-with-only-rfcat/" target="_blank" rel="external">Hacking fixed key remotes with (only) RFCat</a></li>
<li><a href="https://www.youtube.com/watch?v=pkTlTCUeec0" target="_blank" rel="external">How to begin hacking with the YARD Stick One - Hak5 1908</a></li>
<li><a href="https://www.youtube.com/watch?v=F3bISk5t8cA" target="_blank" rel="external">How to Hack Wireless Remotes with Radio Replay Attacks - Hak5 1909</a></li>
<li><a href="https://www.youtube.com/watch?v=EZU2AZtfJbI" target="_blank" rel="external">Hacking Wireless Doorbells and Software Defined Radio tips - Hak5 1910</a></li>
<li><a href="https://www.youtube.com/watch?v=LqmVaf2KHYA" target="_blank" rel="external">Hacking Keyless Entry Remotes - Hak5 1911</a></li>
<li><a href="https://www.youtube.com/watch?v=blpycY5JCm0" target="_blank" rel="external">How to Hack Radio with Brute Force Attacks - Hak5 1912</a></li>
<li><a href="https://www.youtube.com/watch?v=eVqIe3na_Zk" target="_blank" rel="external">Radio Hacking: Reverse Engineering Protocols Part 1 - Hak5 1913</a></li>
<li><a href="https://www.youtube.com/watch?v=vf38-8LbDuw" target="_blank" rel="external">Radio Hacking: Reverse Engineering Protocols Part 2 - Hak5 1914</a></li>
<li><a href="https://pandwarf.com/news/yard-stick-one-vs-rtl-sdr-vs-pandwarf/" target="_blank" rel="external">Yard Stick One vs RTL-SDR vs PandwaRF: Fight of the dwarves</a></li>
<li><a href="http://greatscottgadgets.com/2015/12-29-rapid-radio-reversing-toorcon-2015/" target="_blank" rel="external">Rapid Radio Reversing, ToorCon 2015</a></li>
<li><a href="https://github.com/gyaresu/opensesame-yardstick" target="_blank" rel="external">opensesame-yardstick</a></li>
<li><a href="https://www.hak5.org/episodes/hak5-1908-how-to-begin-hacking-with-the-yard-stick-one" target="_blank" rel="external">Hak5 1908 – How to begin hacking with the YARD Stick One</a></li>
<li><a href="http://leetupload.com/blagosphere/index.php/2014/02/16/you-know-how-to-send-my-signal-setting-up-rfcat-from-scratch/" target="_blank" rel="external">You know how to send my signal — Setting up RFCat from scratch</a></li>
<li><a href="https://www.legacysecuritygroup.com/index.php/categories/13-sdr/22-rfpwnon-py-the-ultimate-rfcat-ask-ook-brute-force-tool" target="_blank" rel="external">rfpwnon.py rfcat ASK OOK brute force tool</a></li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;a href=&quot;https://greatscottgadgets.com/yardstickone/&quot;&gt;YARD Stick One&lt;/a&gt; 是一款 1 GHz 以下的 USB 无线收发器设备，基于 TI 的 &lt;a href=&quot;http://www.ti.com/product/CC1110-CC1111&quot;&gt;CC1111&lt;/a&gt; 芯片。你可以将 YARD Stick One 用于进行各种遥控信号的重放，汽车遥控锁的安全研究等。&lt;/p&gt;
    
    </summary>
    
    
      <category term="Hardware" scheme="https://znhocn.github.io/tags/Hardware/"/>
    
      <category term="Radio" scheme="https://znhocn.github.io/tags/Radio/"/>
    
      <category term="YARD Stick One" scheme="https://znhocn.github.io/tags/YARD-Stick-One/"/>
    
  </entry>
  
  <entry>
    <title>Diary 2017-05-13</title>
    <link href="https://znhocn.github.io/posts/2017/05/13/Diary-2017-05-13/"/>
    <id>https://znhocn.github.io/posts/2017/05/13/Diary-2017-05-13/</id>
    <published>2017-05-13T08:30:26.000Z</published>
    <updated>2017-05-22T14:26:02.135Z</updated>
    
    <content type="html"><![CDATA[<script src="/crypto-js.js"></script><script src="/mcommon.js"></script><h3 id="encrypt-message">Welcome to my blog, enter password to read.</h3><link rel="stylesheet" href="//cdn.bootcss.com/bootstrap/3.3.5/css/bootstrap.min.css"> <link rel="stylesheet" href="//cdn.bootcss.com/bootstrap/3.3.5/css/bootstrap-theme.min.css"> <script src="//cdn.bootcss.com/jquery/1.11.3/jquery.min.js"></script> <script src="//cdn.bootcss.com/bootstrap/3.3.5/js/bootstrap.min.js"></script> <div id="security"> <div> <div class="input-group"> <input type="text" class="form-control" aria-label="Enter the password." id="pass"/> <div class="input-group-btn"> <button type="button" class="btn btn-default" onclick="decryptAES()">Decrypt</button> </div> </div> </div> </div> <div id="encrypt-blog" style="display:none"> U2FsdGVkX18zh0dDN6mYlFtIfFEKg55JxgJRnkU4yxHFNyDwfk5xp0krauGSHW1oym3MrgGCUDAu3oeGrLjMqkeq2TX9HTX0zU0sy1XA+9rvh8DVxPIAknqjY4P4wiSymG5338skdHGBUvVII0MDcNwQuNAbgBLvJpdG6hloRJaE/uKIi8XpQKDOWhOFLsMk7O/8WajV1Yf385nsR3oa19sAiLqItbQ5HPAmTQWI0uYQ7U/oXX2tJaV/ed43o5sqaTjVl5XSEkps4YFtBVbz0IjGpokUmTiESjvJ4LwHHQlw+u5a2UPv0euyegVjD16D5XRNaUulF1zXownKv9K8ZW7CcQj6eiUI12SHz5gSCSP1gANS8NdRnvaI7lsvsvzJPfuM93OduOK5K0+gqw0fPhrsSdedUJOOF04yRIVCEC6GkBVstIpffCaO9dbOWhRJau+fn8ZXDYcr5HB8zDBAvsa+BGjHr9gcgPkTgQEoLwExc1Qu6TBJeA1kxR8r8LpsHzMUct2G+Y/GmvxA6lbP1x/BZoLItEWfpx//su70ez3FGYPCg0RbKPLCPdzmS0joniF5l79JIopoPse4FiwRlV0BJHqp52zoSVJLIVDc5qU/sC32bPb+hvIZjsAyn90BdIg3iZgs2ZuXfXksVXFxH2K15VUPSMpDCdAbq1itTWLZKGa+2NUxdoN0gJ10oLyxBGGWPrIMjq/pHSvhbH1EAyduB77xR7YO3SU1VNLETOIlavdPWJQzFwGx/FMNvKa6hnDemUgVWaTA/2AnEOxJlw== </div>]]></content>
    
    <summary type="html">
    
      The article has been encrypted, please enter your password to view.&lt;br&gt;
    
    </summary>
    
    
      <category term="Diary" scheme="https://znhocn.github.io/tags/Diary/"/>
    
  </entry>
  
  <entry>
    <title>Diary 2017-05-04</title>
    <link href="https://znhocn.github.io/posts/2017/05/04/Diary-2017-05-04/"/>
    <id>https://znhocn.github.io/posts/2017/05/04/Diary-2017-05-04/</id>
    <published>2017-05-04T08:13:05.000Z</published>
    <updated>2017-05-04T10:22:24.450Z</updated>
    
    <content type="html"><![CDATA[<script src="/crypto-js.js"></script><script src="/mcommon.js"></script><h3 id="encrypt-message">Welcome to my blog, enter password to read.</h3><link rel="stylesheet" href="//cdn.bootcss.com/bootstrap/3.3.5/css/bootstrap.min.css"> <link rel="stylesheet" href="//cdn.bootcss.com/bootstrap/3.3.5/css/bootstrap-theme.min.css"> <script src="//cdn.bootcss.com/jquery/1.11.3/jquery.min.js"></script> <script src="//cdn.bootcss.com/bootstrap/3.3.5/js/bootstrap.min.js"></script> <div id="security"> <div> <div class="input-group"> <input type="text" class="form-control" aria-label="Enter the password." id="pass"/> <div class="input-group-btn"> <button type="button" class="btn btn-default" onclick="decryptAES()">Decrypt</button> </div> </div> </div> </div> <div id="encrypt-blog" style="display:none"> U2FsdGVkX1+p4OFguheBwSApbKM2t27HCD5BIWRyqtV4Mia0klpk7rMKGnhi3RYf51kYZmGy/jaG2+rhPEyiSysgaDfy+vAF/5lzoUviHCLuZ0Sjwh91GMfkSuu4NDAs </div>]]></content>
    
    <summary type="html">
    
      The article has been encrypted, please enter your password to view.&lt;br&gt;
    
    </summary>
    
    
      <category term="Diary" scheme="https://znhocn.github.io/tags/Diary/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="https://znhocn.github.io/posts/2017/01/01/hello-world/"/>
    <id>https://znhocn.github.io/posts/2017/01/01/hello-world/</id>
    <published>2016-12-31T17:01:01.000Z</published>
    <updated>2017-05-04T11:08:00.539Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="external">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="external">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="external">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="external">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo new <span class="string">"My New Post"</span></div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="external">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo server</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="external">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo generate</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="external">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo deploy</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="external">Deployment</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
    
    </summary>
    
    
  </entry>
  
</feed>
